name: Fetch and Update PacketsDatabase Data

on:
  workflow_dispatch:
  schedule:
    - cron: '*/30 * * * *'

permissions:
  contents: write

jobs:
  build:
    runs-on: ubuntu-latest

    steps:
      - name: Checkout repository
        uses: actions/checkout@v4

      - name: Install dependencies
        run: |
          sudo apt-get update
          sudo apt-get install -y jq

      - name: Fetch and process data
        run: |
          echo "Starting data fetch from packetsdatabase.com..."
          
          API_URL="https://packetsdatabase.com/api/data"
          TOTAL_COUNT=$(curl -s -L "${API_URL}?page=1&size=1&filter=" | jq -r '.total')
          
          if ! [[ "$TOTAL_COUNT" =~ ^[0-9]+$ ]] || [ "$TOTAL_COUNT" -le 0 ]; then
            echo "Error: Failed to retrieve a valid total count. Received: $TOTAL_COUNT"
            exit 1
          fi
          
          echo "Total records to fetch: $TOTAL_COUNT"
          
          curl -s -L "${API_URL}?page=1&size=${TOTAL_COUNT}&filter=" -o data.json
          
          if [ ! -s data.json ]; then
             echo "Error: Failed to download the full dataset. The data.json file is empty."
             exit 1
          fi
          
          echo "Full dataset downloaded successfully."
          
          # Process the JSON to create the IP list
          jq -r '.data[][1]' data.json > ip_list.txt
          
          echo "Processed $(wc -l < ip_list.txt) IPs into ip_list.txt"

      - name: Update README count
        run: |
          IP_COUNT=$(wc -l < ip_list.txt | awk '{print $1}')
          # Format with commas
          COUNT_FORMATTED=$(printf "%'d" $IP_COUNT)
          # Create the badge URL, ensuring no spaces
          BADGE_URL="https://img.shields.io/badge/IPs%20Tracked-${COUNT_FORMATTED}-blue?style=for-the-badge"
          # Replace the placeholder in README.md
          sed -i "s|<!-- IP_COUNT_PLACEHOLDER -->|![IPs Tracked](${BADGE_URL})|g" README.md

      - name: Commit and push changes
        run: |
          git config --global user.name "github-actions[bot]"
          git config --global user.email "github-actions[bot]@users.noreply.github.com"
          
          # Add the updated files
          git add ip_list.txt README.md
          
          # If the zmap file still exists from a previous run, remove it
          if [ -f zmap_blacklist.conf ]; then
            git rm zmap_blacklist.conf
          fi
          
          if ! git diff --staged --quiet; then
            git commit -m "Update: Fetched latest data from packetsdatabase.com"
            git push
          else
            echo "No changes to commit. Data is up-to-date."
          fi
